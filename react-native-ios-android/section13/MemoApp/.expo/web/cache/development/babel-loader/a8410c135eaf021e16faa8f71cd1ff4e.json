{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/kaito/Udemy/react-native-ios-android/section13/MemoApp/src/screens/MemoListScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport MemoList from \"../components/MemoList\";\nimport CircleButton from \"../elements/CircleButton\";\n\nvar MemoListScreen = function (_React$Component) {\n  _inherits(MemoListScreen, _React$Component);\n\n  var _super = _createSuper(MemoListScreen);\n\n  function MemoListScreen() {\n    _classCallCheck(this, MemoListScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MemoListScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: styles.conteiner\n      }, React.createElement(MemoList, {\n        navigation: this.props.navigation\n      }), React.createElement(CircleButton, {\n        name: \"plus\",\n        onPress: function onPress() {\n          _this.props.navigation.navigate(\"MemoEdit\");\n        }\n      }));\n    }\n  }]);\n\n  return MemoListScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  conteiner: {\n    flex: 1,\n    width: \"100%\",\n    backgroundColor: \"#FFFDF6\"\n  }\n});\nexport default MemoListScreen;","map":{"version":3,"sources":["/Users/kaito/Udemy/react-native-ios-android/section13/MemoApp/src/screens/MemoListScreen.js"],"names":["React","MemoList","CircleButton","MemoListScreen","styles","conteiner","props","navigation","navigate","Component","StyleSheet","create","flex","width","backgroundColor"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,OAAOC,QAAP;AACA,OAAOC,YAAP;;IAEMC,c;;;;;;;;;;;;;6BACK;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,SACE,oBAAC,QAAD;AAAU,QAAA,UAAU,EAAE,KAAKC,KAAL,CAAWC;AAAjC,QADF,EAEE,oBAAC,YAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,KAAI,CAACD,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,UAA/B;AACD;AAJH,QAFF,CADF;AAWD;;;;EAb0BR,KAAK,CAACS,S;;AAgBnC,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,eAAe,EAAE;AAHR;AADoB,CAAlB,CAAf;AAQA,eAAeX,cAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\n\nimport MemoList from \"../components/MemoList\";\nimport CircleButton from \"../elements/CircleButton\";\n\nclass MemoListScreen extends React.Component {\n  render() {\n    return (\n      <View style={styles.conteiner}>\n        <MemoList navigation={this.props.navigation} />\n        <CircleButton\n          name=\"plus\"\n          onPress={() => {\n            this.props.navigation.navigate(\"MemoEdit\");\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  conteiner: {\n    flex: 1,\n    width: \"100%\",\n    backgroundColor: \"#FFFDF6\",\n  },\n});\n\nexport default MemoListScreen;\n"]},"metadata":{},"sourceType":"module"}