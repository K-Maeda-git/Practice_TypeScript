{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/kaito/Udemy/react-native-ios-android/section15/MemoApp/src/screens/MemoDateilScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport CircleButton from \"../elements/CircleButton\";\n\nvar MemoDateilScreen = function (_React$Component) {\n  _inherits(MemoDateilScreen, _React$Component);\n\n  var _super = _createSuper(MemoDateilScreen);\n\n  function MemoDateilScreen() {\n    _classCallCheck(this, MemoDateilScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MemoDateilScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: styles.conteiner\n      }, React.createElement(View, null, React.createElement(View, {\n        style: styles.memoHeader\n      }, React.createElement(View, null, React.createElement(Text, {\n        style: styles.momeHeaderTitle\n      }, \"\\u8B1B\\u5EA7\\u306E\\u30A2\\u30A4\\u30C7\\u30A2\"), React.createElement(Text, {\n        style: styles.momeHeaderDate\n      }, \"2020/12/09\")))), React.createElement(View, {\n        style: styles.memoContent\n      }, React.createElement(Text, null, \"\\u8B1B\\u5EA7\\u306E\\u30A2\\u30A4\\u30C7\\u30A2\")), React.createElement(CircleButton, {\n        name: \"pencile\",\n        color: \"white\",\n        style: styles.editButton,\n        onPress: function onPress() {\n          _this.props.navigation.navigate(\"MemoEdit\");\n        }\n      }));\n    }\n  }]);\n\n  return MemoDateilScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  conteiner: {\n    flex: 1,\n    width: \"100%\"\n  },\n  memoHeader: {\n    height: 100,\n    backgroundColor: \"#17313C\",\n    justifyContent: \"center\",\n    padding: 10\n  },\n  momeHeaderTitle: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#fff\",\n    marginBottom: 4\n  },\n  momeHeaderDate: {\n    fontSize: 12,\n    color: \"#fff\"\n  },\n  memoContent: {\n    paddingTop: 30,\n    paddingLeft: 20,\n    paddingRight: 20,\n    paddingBottom: 20,\n    backgroundColor: \"#fff\",\n    flex: 1\n  },\n  editButton: {\n    top: 75\n  }\n});\nexport default MemoDateilScreen;","map":{"version":3,"sources":["/Users/kaito/Udemy/react-native-ios-android/section15/MemoApp/src/screens/MemoDateilScreen.js"],"names":["React","CircleButton","MemoDateilScreen","styles","conteiner","memoHeader","momeHeaderTitle","momeHeaderDate","memoContent","editButton","props","navigation","navigate","Component","StyleSheet","create","flex","width","height","backgroundColor","justifyContent","padding","fontSize","fontWeight","color","marginBottom","paddingTop","paddingLeft","paddingRight","paddingBottom","top"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,OAAOC,YAAP;;IAEMC,gB;;;;;;;;;;;;;6BACK;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,SACE,oBAAC,IAAD,QACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE;AAApB,SACE,oBAAC,IAAD,QACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG;AAApB,sDADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI;AAApB,sBAFF,CADF,CADF,CADF,EAUE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK;AAApB,SACE,oBAAC,IAAD,qDADF,CAVF,EAcE,oBAAC,YAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,KAAK,EAAEL,MAAM,CAACM,UAHhB;AAIE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,KAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,UAA/B;AACD;AANH,QAdF,CADF;AAyBD;;;;EA3B4BZ,KAAK,CAACa,S;;AA8BrC,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,SAAS,EAAE;AACTY,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,KAAK,EAAE;AAFE,GADoB;AAK/BZ,EAAAA,UAAU,EAAE;AACVa,IAAAA,MAAM,EAAE,GADE;AAEVC,IAAAA,eAAe,EAAE,SAFP;AAGVC,IAAAA,cAAc,EAAE,QAHN;AAIVC,IAAAA,OAAO,EAAE;AAJC,GALmB;AAW/Bf,EAAAA,eAAe,EAAE;AACfgB,IAAAA,QAAQ,EAAE,EADK;AAEfC,IAAAA,UAAU,EAAE,MAFG;AAGfC,IAAAA,KAAK,EAAE,MAHQ;AAIfC,IAAAA,YAAY,EAAE;AAJC,GAXc;AAiB/BlB,EAAAA,cAAc,EAAE;AACde,IAAAA,QAAQ,EAAE,EADI;AAEdE,IAAAA,KAAK,EAAE;AAFO,GAjBe;AAqB/BhB,EAAAA,WAAW,EAAE;AACXkB,IAAAA,UAAU,EAAE,EADD;AAEXC,IAAAA,WAAW,EAAE,EAFF;AAGXC,IAAAA,YAAY,EAAE,EAHH;AAIXC,IAAAA,aAAa,EAAE,EAJJ;AAKXV,IAAAA,eAAe,EAAE,MALN;AAMXH,IAAAA,IAAI,EAAE;AANK,GArBkB;AA6B/BP,EAAAA,UAAU,EAAE;AACVqB,IAAAA,GAAG,EAAE;AADK;AA7BmB,CAAlB,CAAf;AAkCA,eAAe5B,gBAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet, View, Text } from \"react-native\";\n\nimport CircleButton from \"../elements/CircleButton\";\n\nclass MemoDateilScreen extends React.Component {\n  render() {\n    return (\n      <View style={styles.conteiner}>\n        <View>\n          <View style={styles.memoHeader}>\n            <View>\n              <Text style={styles.momeHeaderTitle}>講座のアイデア</Text>\n              <Text style={styles.momeHeaderDate}>2020/12/09</Text>\n            </View>\n          </View>\n        </View>\n\n        <View style={styles.memoContent}>\n          <Text>講座のアイデア</Text>\n        </View>\n\n        <CircleButton\n          name=\"pencile\"\n          color=\"white\"\n          style={styles.editButton}\n          onPress={() => {\n            this.props.navigation.navigate(\"MemoEdit\");\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  conteiner: {\n    flex: 1,\n    width: \"100%\",\n  },\n  memoHeader: {\n    height: 100,\n    backgroundColor: \"#17313C\",\n    justifyContent: \"center\",\n    padding: 10,\n  },\n  momeHeaderTitle: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#fff\",\n    marginBottom: 4,\n  },\n  momeHeaderDate: {\n    fontSize: 12,\n    color: \"#fff\",\n  },\n  memoContent: {\n    paddingTop: 30,\n    paddingLeft: 20,\n    paddingRight: 20,\n    paddingBottom: 20,\n    backgroundColor: \"#fff\",\n    flex: 1,\n  },\n  editButton: {\n    top: 75,\n  },\n});\n\nexport default MemoDateilScreen;\n"]},"metadata":{},"sourceType":"module"}