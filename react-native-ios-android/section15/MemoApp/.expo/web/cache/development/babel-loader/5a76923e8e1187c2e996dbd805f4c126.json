{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/kaito/Udemy/react-native-ios-android/section15/MemoApp/src/screens/LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport firebase from \"firebase\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: \"user1@example.com\",\n      password: \"password\"\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      var _this2 = this;\n\n      firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then(function (_ref) {\n        var user = _ref.user;\n\n        _this2.props.navigation.navigate(\"Home\");\n\n        console.log(\"success\", user);\n      }).catch(function (error) {\n        console.log(\"error!\", error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.conteiner\n      }, React.createElement(Text, {\n        style: styles.title\n      }, \"\\u30ED\\u30B0\\u30A4\\u30F3\"), React.createElement(TextInput, {\n        style: styles.input,\n        value: this.state.email,\n        onChangeText: function onChangeText(text) {\n          _this3.setState({\n            email: text\n          });\n        },\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        placeholder: \"Email Address\"\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        value: this.state.password,\n        onChangeText: function onChangeText(text) {\n          _this3.setState({\n            password: text\n          });\n        },\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        placeholder: \"Password\",\n        secureTextEntry: true\n      }), React.createElement(TouchableHighlight, {\n        style: styles.button,\n        onPress: this.handleSubmit.bind(this),\n        underlayColor: \"#C70F66\"\n      }, React.createElement(Text, {\n        style: styles.buttonTitle\n      }, \"\\u30ED\\u30B0\\u30A4\\u30F3\\u3059\\u308B\")));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  conteiner: {\n    flex: 1,\n    width: \"100%\",\n    padding: 24,\n    backgroundColor: \"#fff\"\n  },\n  title: {\n    fontSize: 28,\n    alignSelf: \"center\",\n    marginBottom: 24\n  },\n  input: {\n    backgroundColor: \"#eee\",\n    height: 48,\n    marginBottom: 16,\n    borderWidth: 1,\n    borderColor: \"#DDD\",\n    padding: 8\n  },\n  button: {\n    backgroundColor: \"#E31676\",\n    height: 48,\n    width: \"70%\",\n    borderRadius: 4,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\"\n  },\n  buttonTitle: {\n    color: \"#fff\",\n    fontSize: 18\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["/Users/kaito/Udemy/react-native-ios-android/section15/MemoApp/src/screens/LoginScreen.js"],"names":["React","firebase","LoginScreen","state","email","password","auth","signInWithEmailAndPassword","then","user","props","navigation","navigate","console","log","catch","error","styles","conteiner","title","input","text","setState","button","handleSubmit","bind","buttonTitle","Component","StyleSheet","create","flex","width","padding","backgroundColor","fontSize","alignSelf","marginBottom","height","borderWidth","borderColor","borderRadius","justifyContent","alignItems","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport firebase from \"firebase\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TextInput,\n  TouchableHighlight,\n} from \"react-native\";\n\nclass LoginScreen extends React.Component {\n  state = {\n    email: \"user1@example.com\",\n    password: \"password\",\n  };\n\n  handleSubmit() {\n    // Sign in!!\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\n      // Sign in完了後ホームへ遷移する\n      .then(({ user }) => {\n        this.props.navigation.navigate(\"Home\");\n        console.log(\"success\", user);\n      })\n      .catch((error) => {\n        console.log(\"error!\", error);\n      });\n  }\n\n  render() {\n    return (\n      <View style={styles.conteiner}>\n        <Text style={styles.title}>ログイン</Text>\n        <TextInput\n          style={styles.input}\n          value={this.state.email}\n          onChangeText={(text) => {\n            this.setState({ email: text });\n          }}\n          // 大文字の変換を無効化\n          autoCapitalize=\"none\"\n          // 補完機能の無効化\n          autoCorrect={false}\n          // テキストボックスに説明を表示\n          placeholder=\"Email Address\"\n        />\n        <TextInput\n          style={styles.input}\n          value={this.state.password}\n          onChangeText={(text) => {\n            this.setState({ password: text });\n          }}\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          placeholder=\"Password\"\n          secureTextEntry\n        />\n        <TouchableHighlight\n          style={styles.button}\n          onPress={this.handleSubmit.bind(this)}\n          underlayColor=\"#C70F66\"\n        >\n          <Text style={styles.buttonTitle}>ログインする</Text>\n        </TouchableHighlight>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  conteiner: {\n    flex: 1,\n    width: \"100%\",\n    padding: 24,\n    backgroundColor: \"#fff\",\n  },\n  title: {\n    fontSize: 28,\n    alignSelf: \"center\",\n    marginBottom: 24,\n  },\n  input: {\n    backgroundColor: \"#eee\",\n    height: 48,\n    marginBottom: 16,\n    borderWidth: 1,\n    borderColor: \"#DDD\",\n    padding: 8,\n  },\n  button: {\n    backgroundColor: \"#E31676\",\n    height: 48,\n    width: \"70%\",\n    borderRadius: 4,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n  },\n  buttonTitle: {\n    color: \"#fff\",\n    fontSize: 18,\n  },\n});\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}