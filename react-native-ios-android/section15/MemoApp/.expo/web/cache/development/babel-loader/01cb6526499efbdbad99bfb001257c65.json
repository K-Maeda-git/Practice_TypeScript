{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/kaito/Udemy/react-native-ios-android/section15/MemoApp/src/screens/MemoEditScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport CircleButton from \"../elements/CircleButton\";\n\nvar MemoEditScreen = function (_React$Component) {\n  _inherits(MemoEditScreen, _React$Component);\n\n  var _super = _createSuper(MemoEditScreen);\n\n  function MemoEditScreen() {\n    _classCallCheck(this, MemoEditScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MemoEditScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: styles.conteiner\n      }, React.createElement(TextInput, {\n        style: styles.memoEditInput,\n        multiline: true,\n        value: \"hogehoge\"\n      }), React.createElement(CircleButton, {\n        name: \"check\",\n        onPress: function onPress() {\n          _this.props.navigation.goBack();\n        }\n      }));\n    }\n  }]);\n\n  return MemoEditScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  conteiner: {\n    flex: 1,\n    width: \"100%\"\n  },\n  memoEditInput: {\n    backgroundColor: \"#fff\",\n    flex: 1,\n    paddingTop: 32,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 16,\n    fontSize: 16\n  }\n});\nexport default MemoEditScreen;","map":{"version":3,"sources":["/Users/kaito/Udemy/react-native-ios-android/section15/MemoApp/src/screens/MemoEditScreen.js"],"names":["React","CircleButton","MemoEditScreen","styles","conteiner","memoEditInput","props","navigation","goBack","Component","StyleSheet","create","flex","width","backgroundColor","paddingTop","paddingLeft","paddingRight","paddingBottom","fontSize"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,OAAOC,YAAP;;IAEMC,c;;;;;;;;;;;;;6BACK;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,SACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAED,MAAM,CAACE,aAAzB;AAAwC,QAAA,SAAS,MAAjD;AAAkD,QAAA,KAAK,EAAC;AAAxD,QADF,EAEE,oBAAC,YAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,KAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBC,MAAtB;AACD;AAJH,QAFF,CADF;AAWD;;;;EAb0BR,KAAK,CAACS,S;;AAgBnC,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,KAAK,EAAE;AAFE,GADoB;AAK/BR,EAAAA,aAAa,EAAE;AACbS,IAAAA,eAAe,EAAE,MADJ;AAEbF,IAAAA,IAAI,EAAE,CAFO;AAGbG,IAAAA,UAAU,EAAE,EAHC;AAIbC,IAAAA,WAAW,EAAE,EAJA;AAKbC,IAAAA,YAAY,EAAE,EALD;AAMbC,IAAAA,aAAa,EAAE,EANF;AAObC,IAAAA,QAAQ,EAAE;AAPG;AALgB,CAAlB,CAAf;AAgBA,eAAejB,cAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet, View, TextInput } from \"react-native\";\n\nimport CircleButton from \"../elements/CircleButton\";\n\nclass MemoEditScreen extends React.Component {\n  render() {\n    return (\n      <View style={styles.conteiner}>\n        <TextInput style={styles.memoEditInput} multiline value=\"hogehoge\" />\n        <CircleButton\n          name=\"check\"\n          onPress={() => {\n            this.props.navigation.goBack();\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  conteiner: {\n    flex: 1,\n    width: \"100%\",\n  },\n  memoEditInput: {\n    backgroundColor: \"#fff\",\n    flex: 1,\n    paddingTop: 32,\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 16,\n    fontSize: 16,\n  },\n});\n\nexport default MemoEditScreen;\n"]},"metadata":{},"sourceType":"module"}